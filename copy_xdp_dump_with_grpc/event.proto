syntax = "proto3";

package main;

option go_package = "github.com/inspektors-io/grpc-nobin/grpc-test";

message EthernetHeader {
  bytes destination_mac = 1;
  bytes source_mac = 2;
  uint32 ether_type = 3;
}

message IpHeader {
  uint32 source_ip = 1;
  uint32 destination_ip = 2;
  uint32 version = 3;
  uint32 ihl = 4;
  uint32 tos = 5;
  uint32 tot_len = 6;
  uint32 id = 7;
  uint32 frag_off = 8;
  uint32 ttl = 9;
  uint32 protocol = 10;
  uint32 check = 11;
}

message TcpHeader {
  uint32 source_port = 1;
  uint32 destination_port = 2;
  uint32 seq = 3;
  uint32 ack_seq = 4;
  bytes ns = 5;
  bytes reserved = 6;
  uint32 doff = 7;
  bytes fin = 8;
  bytes syn = 9;
  bytes rst = 10;
  bytes psh = 11;
  bytes ack = 12;
  bytes urg = 13;
  bytes ece = 14;
  bytes cwr = 15;
  uint32 window = 16;
  uint32 check = 17;
  uint32 urg_ptr = 18;
}

message UserRequest {
  IpHeader ip_header = 1;
  TcpHeader tcp_header = 2;
  EthernetHeader ethernet_header = 3;
  int32 packet_number = 4;
  string raw_data = 5;
}

message UserResponse {
  string message = 1;
}

service UserService {
  rpc SendUserData(UserRequest) returns (UserResponse);
}
