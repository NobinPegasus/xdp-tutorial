// Code generated by bpf2go; DO NOT EDIT.
//go:build mips || mips64 || ppc64 || s390x

package main

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadTcDump returns the embedded CollectionSpec for TcDump.
func LoadTcDump() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_TcDumpBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load TcDump: %w", err)
	}

	return spec, err
}

// LoadTcDumpObjects loads TcDump and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//	*TcDumpObjects
//	*TcDumpPrograms
//	*TcDumpMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadTcDumpObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadTcDump()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// TcDumpSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type TcDumpSpecs struct {
	TcDumpProgramSpecs
	TcDumpMapSpecs
}

// TcDumpSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type TcDumpProgramSpecs struct {
	TcDump *ebpf.ProgramSpec `ebpf:"tc_dump"`
}

// TcDumpMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type TcDumpMapSpecs struct {
	Perfmap *ebpf.MapSpec `ebpf:"perfmap"`
}

// TcDumpObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadTcDumpObjects or ebpf.CollectionSpec.LoadAndAssign.
type TcDumpObjects struct {
	TcDumpPrograms
	TcDumpMaps
}

func (o *TcDumpObjects) Close() error {
	return _TcDumpClose(
		&o.TcDumpPrograms,
		&o.TcDumpMaps,
	)
}

// TcDumpMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadTcDumpObjects or ebpf.CollectionSpec.LoadAndAssign.
type TcDumpMaps struct {
	Perfmap *ebpf.Map `ebpf:"perfmap"`
}

func (m *TcDumpMaps) Close() error {
	return _TcDumpClose(
		m.Perfmap,
	)
}

// TcDumpPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadTcDumpObjects or ebpf.CollectionSpec.LoadAndAssign.
type TcDumpPrograms struct {
	TcDump *ebpf.Program `ebpf:"tc_dump"`
}

func (p *TcDumpPrograms) Close() error {
	return _TcDumpClose(
		p.TcDump,
	)
}

func _TcDumpClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//
//go:embed tcdump_bpfeb.o
var _TcDumpBytes []byte
